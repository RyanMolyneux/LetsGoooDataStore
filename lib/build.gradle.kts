/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */
val letsGoooDatastoreVersion = "2.1.0";

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.7.10"
    id("java-library")
    id("maven-publish")
}

repositories {
    // Use JCenter for resolving dependencies.
    google()
    jcenter()
}

kotlin {
    sourceSets {
        main.configure {
            kotlin.srcDirs( "src/main/kotlin")
        }
        test.configure {
            kotlin.srcDirs("src/test/kotlin")
        }
    }
}

java {
    sourceSets {
        main.configure {
            java.srcDirs("src/main/kotlin")
        }
        test.configure {
            java.srcDirs("src/test/kotlin")
        }
    }
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("com.google.code.gson:gson:2.11.0")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
    testImplementation("org.mockito:mockito-core:5.12.0")
}

publishing {
    repositories {
        maven {
            name = "MajorProductions"
            url = uri("https://maven.pkg.github.com/RyanMolyneux/MajorProductions")
            credentials {
                username = System.getenv("GIT_USERNAME")
                password = System.getenv("GIT_PUBLISH_PACKAGE_TOKEN")
            }
        }
    }
    publications {
        register<MavenPublication>("release") {
            artifactId = "letsgooodatastore"
            groupId = "com.ryanmolyneux"
            version = letsGoooDatastoreVersion
            artifact("$buildDir/libs/lib.jar")
            pom.withXml {
                val dependenciesNode = asNode().appendNode("dependencies")
                configurations.api.get().allDependencies.forEach {
                    val dependencyNode = dependenciesNode.appendNode("dependency")
                    dependencyNode.appendNode("groupId", it.group)
                    dependencyNode.appendNode("artifactId", it.name)
                    dependencyNode.appendNode("version", it.version)
                }
            }
        }
    }
}